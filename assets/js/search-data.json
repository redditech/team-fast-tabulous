{
  
    
        "post0": {
            "title": "Getting Kaggle Data for Homesite",
            "content": "Introduction . This notebook is a demonstration of what I did to get the Homesite competition data from Kaggle. . Tools . If you haven&#39;t installed the Kaggle tools, you would need to do so like this . !pip install kaggle --upgrade . Requirement already satisfied: kaggle in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (1.5.12) Requirement already satisfied: python-dateutil in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from kaggle) (2.8.1) Requirement already satisfied: certifi in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from kaggle) (2021.5.30) Requirement already satisfied: requests in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from kaggle) (2.25.1) Requirement already satisfied: tqdm in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from kaggle) (4.59.0) Requirement already satisfied: urllib3 in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from kaggle) (1.26.4) Requirement already satisfied: python-slugify in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from kaggle) (5.0.2) Requirement already satisfied: six&gt;=1.10 in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from kaggle) (1.16.0) Requirement already satisfied: text-unidecode&gt;=1.3 in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from python-slugify-&gt;kaggle) (1.3) Requirement already satisfied: chardet&lt;5,&gt;=3.0.2 in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from requests-&gt;kaggle) (4.0.0) Requirement already satisfied: idna&lt;3,&gt;=2.5 in /usr/local/anaconda3/envs/fastai/lib/python3.8/site-packages (from requests-&gt;kaggle) (2.10) . Then you need to download your Kaggle key following the instructions here . You may need to create the ~/.kaggle directory manually before copying the downloaded file kaggle.json file to that folder. . Follow the instructions as coded to download the kaggle data. For me, I use a _data folder that is excluded from checkins in the .gitignore to make sure I do not inadvertently upload it when I check in any changes to the repository, since I&#39;m writing this blog post as I am coding. I&#39;m not using any of the tabular stuff from fastai library yet, but I want to use some of the nice utility functions it gives me to make sure I do the command line stuff correctly and capture it in the notebook. So I need to install it. . !mamba install -c fastchan fastai -y . __ __ __ __ / / / / / / / / ███████████████/ /██/ /██/ /██/ /████████████████████████ / / / / / ____ / / _/ _/ _/ o __, / _/ _____/ ` |/ ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗ ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗ ██╔████╔██║███████║██╔████╔██║██████╔╝███████║ ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║ ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║ ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝ mamba (0.13.0) supported by @QuantStack GitHub: https://github.com/mamba-org/mamba Twitter: https://twitter.com/QuantStack █████████████████████████████████████████████████████████████ Looking for: [&#39;fastai&#39;] pkgs/main/noarch [&gt; ] (--:--) No change pkgs/main/noarch [====================] (00m:00s) No change pkgs/main/osx-64 [&gt; ] (--:--) No change pkgs/main/osx-64 [====================] (00m:00s) No change pkgs/r/osx-64 [=&gt; ] (--:--) No change pkgs/r/osx-64 [====================] (00m:00s) No change pkgs/r/noarch [=&gt; ] (--:--) No change pkgs/r/noarch [====================] (00m:00s) No change fastchan/osx-64 [=&gt; ] (--:--) No change fastchan/osx-64 [====================] (00m:00s) No change fastchan/noarch [&gt; ] (--:--) No change fastchan/noarch [====================] (00m:00s) No change Transaction Prefix: /usr/local/anaconda3/envs/fastai Updating specs: - fastai Package Version Build Channel Size ─────────────────────────────────────────────────────── Install: ─────────────────────────────────────────────────────── fastai 2.4 py_0 fastchan/noarch Cached Summary: Install: 1 packages Total download: 0 B ─────────────────────────────────────────────────────── Preparing transaction: done Verifying transaction: done Executing transaction: done . Now I have to load fastai and I can get the utilities I want. . from fastai.tabular.all import * . Path.cwd() . Path(&#39;/Users/nissan/code/team-fast-tabulous/_notebooks&#39;) . os.chdir(&#39;../_data&#39;) Path.cwd() . Path(&#39;/Users/nissan/code/team-fast-tabulous/_data&#39;) . !kaggle competitions download -c homesite-quote-conversion . Warning: Your Kaggle API key is readable by other users on this system! To fix this, you can run &#39;chmod 600 /Users/nissan/.kaggle/kaggle.json&#39; Downloading homesite-quote-conversion.zip to /Users/nissan/code/team-fast-tabulous/_data 100%|█████████████████████████████████████▉| 62.0M/62.0M [00:05&lt;00:00, 11.3MB/s] 100%|██████████████████████████████████████| 62.0M/62.0M [00:05&lt;00:00, 11.0MB/s] . path.ls() . (#1) [Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/homesite-quote-conversion.zip&#39;)] . Unfortunately, untar_data doesn&#39;t support zip format, so we need another tool, file_extract for this . file_extract(&#39;homesite-quote-conversion.zip&#39;) . path.ls() . (#4) [Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/homesite-quote-conversion.zip&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/test.csv.zip&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/train.csv.zip&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/sample_submission.csv.zip&#39;)] . file_extract(&#39;test.csv.zip&#39;) file_extract(&#39;train.csv.zip&#39;) file_extract(&#39;sample_submission.csv.zip&#39;) path.ls() . (#7) [Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/test.csv&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/homesite-quote-conversion.zip&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/train.csv&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/test.csv.zip&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/train.csv.zip&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/sample_submission.csv.zip&#39;),Path(&#39;/Users/nissan/code/team-fast-tabulous/_data/sample_submission.csv&#39;)] . And there you have it. I have the uncompressed data available, and can now start doing some exploratory data analysis on it. .",
            "url": "https://redditech.github.io/team-fast-tabulous/jupyter/2021/06/19/test-Get-Kaggle-Data.html",
            "relUrl": "/jupyter/2021/06/19/test-Get-Kaggle-Data.html",
            "date": " • Jun 19, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://redditech.github.io/team-fast-tabulous/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://redditech.github.io/team-fast-tabulous/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://redditech.github.io/team-fast-tabulous/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}